#
#                        Proai Configuration 
#                 ================================

#######################
# Required Properties #
#######################

# [proai.cache.RecordCache.baseDir]
#     The directory where cache files should be stored. This will be created 
#     if it doesn't exist.

proai.cache.RecordCache.baseDir            = build/test/cache


# [proai.cache.RecordCache.oaiDriverClassName]
#     The class name of proai.driver.OAIDriver implementation. This should be 
#     in the classpath.

proai.cache.RecordCache.oaiDriverClassName = proai.driver.impl.OAIDriverImpl


# [proai.cache.RecordCache.db.url]
#     The JDBC connection URL for the database that will be used by the cache.
# [proai.cache.RecordCache.db.driverClassName]
#     The class name of the JDBC driver appropriate for use with the
#     connection url.  This class should be in the classpath.
# [proai.cache.RecordCache.db.username]
#     The database user.  This user should already exist in the database
#     and must have permission to create, modify, and query tables.
# [proai.cache.RecordCache.db.password]
#     The password for the database user.

proai.cache.RecordCache.db.url             = jdbc:mckoi:local://build/test/mckoi/mckoi.conf?create_or_boot=true
proai.cache.RecordCache.db.driverClassName = com.mckoi.JDBCDriver
proai.cache.RecordCache.db.username        = proai
proai.cache.RecordCache.db.password        = proai

# [JDBC Driver-specific DDL Converters]
#     A ddlConverter class is used to generate the commands necessary for 
#     creating the tables required Proai's record cache.  The name of the 
#     property should be the driverClassName of the JDBC driver you're using
#     plus ".ddlConverter".
com.mckoi.JDBCDriver.ddlConverter            = proai.util.McKoiDDLConverter
com.mysql.jdbc.Driver.ddlConverter           = proai.util.MySQLDDLConverter
oracle.jdbc.driver.OracleDriver.ddlConverter = proai.util.OracleDDLConverter


#################################
# OAIDriver-Specific Properties #
#################################

# [proai.driver.impl.OAIDriverImpl.baseDir]
#     The directory where OAIDriverImpl can find the files it requires.
proai.driver.impl.OAIDriverImpl.baseDir    = src/test


#################################
# Advanced, Optional Properties #
#################################

# [Advanced connection pool configuration]
#     These properties map to those defined by the Apache commons-DBCP project,
#     documented at http://jakarta.apache.org/commons/dbcp/configuration.html
#
# proai.cache.RecordCache.db.defaultAutoCommit =
# proai.cache.RecordCache.db.defaultReadOnly =
# proai.cache.RecordCache.db.defaultTransactionIsolation =
# proai.cache.RecordCache.db.defaultCatalog =
# proai.cache.RecordCache.db.maxActive =
# proai.cache.RecordCache.db.maxIdle =
# proai.cache.RecordCache.db.minIdle =
# proai.cache.RecordCache.db.initialSize =
# proai.cache.RecordCache.db.maxWait =
# proai.cache.RecordCache.db.testOnBorrow =
# proai.cache.RecordCache.db.testOnReturn =
# proai.cache.RecordCache.db.timeBetweenEvictionRunsMillis =
# proai.cache.RecordCache.db.numTestsPerEvictionRun =
# proai.cache.RecordCache.db.minEvictableIdleTimeMillis =
# proai.cache.RecordCache.db.testWhileIdle =
# proai.cache.RecordCache.db.validationQuery =
# proai.cache.RecordCache.db.accessToUnderlyingConnectionAllowed =
# proai.cache.RecordCache.db.removeAbandoned =
# proai.cache.RecordCache.db.removeAbandonedTimeout =
# proai.cache.RecordCache.db.logAbandoned =
# proai.cache.RecordCache.db.poolPreparedStatements =
# proai.cache.RecordCache.db.maxOpenPreparedStatements =
#
# [Connection-specific properties]
#     These properties can be anything you want.  Two examples follow.
#     The name after "db.connection." should be the name of any 
#     connection-specific property.
#
# proai.cache.RecordCache.db.connection.anyConnectionProperty = 
# proai.cache.RecordCache.db.connection.anyConnectionProperty2 = 
