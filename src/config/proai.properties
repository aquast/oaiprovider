#
#                        Proai Configuration 
#                 ================================

#######################
# Required Properties #
#######################

proai.readLockWait = 1000
proai.writeLockWait = 60000
proai.sessionbaseDir = /work/proai/build/test/sessions
proai.secondsBetweenRequests = 600
proai.incompleteRecordListSize = 2
proai.incompleteSetListSize = 2
proai.incompleteIdentifierListSize = 2

# [proai.readLockWait]
#     The number of milliseconds to wait for a read lock on the cache
#     before giving up.  A higher value means that OAI harvesters won't
#     have to deal with "Service Unavailable" requests as often, whereas
#     a lower value will result in quicker response.

proai.readLockWait = 5000

# [proai.writeLockWait]
#     The number of milliseconds to wait for a write lock on the cache
#     before giving up.  If this amount of time passes while waiting
#     to commit a change to the cache, the update will be canceled and
#     attempted again after proai.cache.RecordCache.pollSeconds

proai.writeLockWait = 60000

# [proai.cacheBaseDir]
#     The directory where cache files should be stored. This will be created 
#     if it doesn't exist.

proai.cacheBaseDir            = /work/proai/build/test/cache


# [proai.driverClassName]
#     The class name of proai.driver.OAIDriver implementation. This should be 
#     in the classpath.

proai.driverClassName = proai.driver.impl.OAIDriverImpl


# [proai.driverPollSeconds]
#     How often to poll the driver for updates.

proai.driverPollSeconds = 60


# [proai.db.url]
#     The JDBC connection URL for the database that will be used by the cache.
# [proai.db.driverClassName]
#     The class name of the JDBC driver appropriate for use with the
#     connection url.  This class should be in the classpath.
# [proai.db.username]
#     The database user.  This user should already exist in the database
#     and must have permission to create, modify, and query tables.
# [proai.db.password]
#     The password for the database user.

# MySQL
proai.db.url = jdbc:mysql://localhost/proai?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true
proai.db.driverClassName = com.mysql.jdbc.Driver

# McKoi
#proai.db.url             = jdbc:mckoi:local://build/test/mckoi/mckoi.conf?create_or_boot=true
#proai.db.driverClassName = com.mckoi.JDBCDriver

proai.db.username        = proai
proai.db.password        = proai

# [JDBC Driver-specific DDL Converters]
#     A ddlConverter class is used to generate the commands necessary for 
#     creating the tables required Proai's record cache.  The name of the 
#     property should be the driverClassName of the JDBC driver you're using
#     plus ".ddlConverter".
com.mckoi.JDBCDriver.ddlConverter            = proai.util.McKoiDDLConverter
com.mysql.jdbc.Driver.ddlConverter           = proai.util.MySQLDDLConverter
oracle.jdbc.driver.OracleDriver.ddlConverter = proai.util.OracleDDLConverter

#################################
# OAIDriver-Specific Properties #
#################################

driver.fedora.baseURL = http://localhost:8080/fedora/
driver.fedora.user = fedoraAdmin
driver.fedora.pass = fedoraAdmin
driver.fedora.queryHandlerClass = fedora.services.oaiprovider.ITQLQueryHandler
driver.fedora.identify = file:///example.org/identify
driver.fedora.md.formats = oai_dc nsdl_dc foo.bar
driver.fedora.md.format.oai_dc.loc = 
driver.fedora.md.format.oai_dc.uri = 
driver.fedora.md.format.oai_dc.dissType = info:fedora/*/getOAIDC

# optional
driver.fedora.md.format.oai_dc.about = info:fedora/*/getOAIDCAbout
driver.fedora.itemID = urn:bar/oai#oaiItemID
driver.fedora.setSpec = urn:foo/oai#setSpec
driver.fedora.setSpec.name

# optional
driver.fedora.setSpec.dissType = info:fedora/*/getSetSpecDesc


driver.fedora.itemSetPath = 
# $set <hasMember> $item
# $item <isMemberOf> $set

# $set <isMemberOf> $a
# $a <representedBy> $set



# optional oai-deleted property
#

#################################
# Advanced, Optional Properties #
#################################

# [Advanced connection pool configuration]
#     These properties map to those defined by the Apache commons-DBCP project,
#     documented at http://jakarta.apache.org/commons/dbcp/configuration.html
#
# proai.db.defaultAutoCommit =
# proai.db.defaultReadOnly =
# proai.db.defaultTransactionIsolation =
# proai.db.defaultCatalog =
# proai.db.maxActive =
# proai.db.maxIdle =
# proai.db.minIdle =
# proai.db.initialSize =
# proai.db.maxWait =
# proai.db.testOnBorrow =
# proai.db.testOnReturn =
# proai.db.timeBetweenEvictionRunsMillis =
# proai.db.numTestsPerEvictionRun =
# proai.db.minEvictableIdleTimeMillis =
# proai.db.testWhileIdle =
# proai.db.validationQuery =
# proai.db.accessToUnderlyingConnectionAllowed =
# proai.db.removeAbandoned =
# proai.db.removeAbandonedTimeout =
# proai.db.logAbandoned =
# proai.db.poolPreparedStatements =
# proai.db.maxOpenPreparedStatements =
#
# [Connection-specific properties]
#     These properties can be anything you want.  Two examples follow.
#     The name after "db.connection." should be the name of any 
#     connection-specific property.
#
# proai.db.connection.anyConnectionProperty = 
# proai.db.connection.anyConnectionProperty2 = 

